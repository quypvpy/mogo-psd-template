// width height
@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}
// absoluteCenter (canh theo X hay Y mình ttuyeenf vào both là cả 2)
@mixin absoluteCenter($direction: "left", $position: absolute) {
    position: $position;

    @if $direction == "left" {
        left: 50%;
        transform: translateX(-50%);
    }
    @if $direction == "top" {
        top: 50%;
        transform: translateY(-50%);
    }
    @if $direction == "both" {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}
//  background color
@mixin bg($color: red) {
    background-color: $color;
}
// absolute full
@mixin absoluteFull {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
// minxin max width($preackpoint){@content}
@mixin maxWidth($breakpoint) {
    @media screen and (max-width: $breakpoint) {
        @content;
        // để viết nối dung vào
    }
}
// minxin max width($preackpoint)
@mixin minWidth($breakpoint) {
    @media screen and (min-width: $breakpoint) {
        @content;
    }
}
// flexx
@mixin flexbox($align-items: stretch, $justify-content: flex-start, $direction: row, $flex: flex, $wrap: nowrap) {
    display: $flex;
    align-items: $align-items;
    justify-content: $justify-content;
    flex-direction: $direction;
    flex-wrap: $wrap;
}
// hidescroll (not fifox trình duyệt)
// k xuất hiện scroll
@mixin hideScroll() {
    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
        display: none;
    }
}
// text clamp (muốn hiện mấy dòng, trả về số dòng mình muốn )
@mixin textClamp($rows: 1, $size: 100%) {
    display: -webkit-box;
    -webkit-line-clamp: $rows;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    width: $size;
    height: $size;
    white-space: pre-wrap;
    // word-break: break-all;
    // nó sẽ rớt k k tjheo tùw
    word-break: break-word;
    // nó sẽ rớt xuống hàng theo từ.
}
// ngõ này thieueus mixin của hovereffect
@mixin hoverEffect($itemClass, $contentClass, $transform: "true") {
    #{$itemClass} {
        position: relative;
        z-index: 1;
        transition: transform 0.25s linear;
        will-change: transform;
        // để nó khoit bị giật..mượt hơn
        #{$contentClass} {
            @include absoluteFull();
            @include flexbox(center, center, column);
            opacity: 0;
            visibility: hidden;
            transition: all 0.25s linear;
            background: linear-gradient(to bottom, rgba($primary-color, 0.8), rgba($secondary-color, 0.8));
            z-index: 2;
        }

        @if $transform == "true" {
            &:after {
                content: "";
                @include absoluteFull();
                background-color: $third-color;
                transition: transform 0.25s linear;
                will-change: transform;
                z-index: -1;
            }
        }
        &:hover {
            #{$contentClass} {
                opacity: 1;
                visibility: visible;
            }

            @if $transform == "true" {
                transform: translate(-1rem, -1rem);
                &::after {
                    transform: translate(1rem, 1rem);
                }
            }
        }
    }
}

@mixin touchSlider($width: 80%, $gap: 2.5rem, $padding: 1rem) {
    display: grid !important;
    justify-content: flex-start !important;
    grid-auto-columns: $width;
    grid-auto-flow: column;
    grid-template-columns: unset;
    grid-column-gap: $gap;
    overflow-x: auto;
    padding: $padding;
    // 3 cái//
    // snap type cho th cha. x theo ngang. madary là kiểu. mỗi lần kéo qua mượt hơn chút
    scroll-snap-type: x mandatory;
    // lướt từng nất
    scroll-snap-stop: always;
    @include hideScroll;
    // cuối cùng thằng con
    // trỏ đến con trực tiếp
    & > * {
        // là tới khúc bên trái
        scroll-snap-align: center;
        width: auto;
    }
}
